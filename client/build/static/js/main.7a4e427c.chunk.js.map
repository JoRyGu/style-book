{"version":3,"sources":["components/UI/Button.js","components/UI/SignInForm.js","components/SignIn/Login.js","components/Authentication/AuthenticateUser.js","components/Dashboard/Dashboard.js","App.js","serviceWorker.js","index.js"],"names":["Button","styled","button","_templateObject","props","red","css","_templateObject2","SignInForm","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","email","undefined","password","emailErr","passwordErr","stylistErr","handleChange","bind","assertThisInitialized","submitForm","event","preventDefault","axios","url","method","data","res","localStorage","setItem","token","history","push","setState","_context","t0","response","stylist","defineProperty","target","name","value","react_default","a","createElement","StyledForm","onSubmit","StyledLabel","htmlFor","StyledInput","type","id","onChange","ErrorMessage","ButtonDiv","UI_Button","Component","p","SignInForm_templateObject","form","SignInForm_templateObject2","input","_templateObject3","label","_templateObject4","div","_templateObject5","withRouter","SignIn","StyledDiv","StyledH1","UI_SignInForm","Login_templateObject","h1","Login_templateObject2","AuthenticateUser","userId","userFirstName","userLastName","getItem","decodedToken","jwtDecode","console","log","children","Dashboard","React","App","BrowserRouter","className","Switch","Redirect","exact","from","to","Route","path","component","Login","Authentication_AuthenticateUser","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7a4e427c.chunk.js","sourcesContent":["import styled, { css } from 'styled-components';\n\nconst Button = styled.button`\n  width: 12rem;\n  height: 4rem;\n  font-size: 2.2rem;\n  font-family: Philosopher;\n  border-radius: 6px;\n  border: 1px solid #979797;\n  box-shadow: 2px 2px 2px rgba(0,0,0,0.5);\n  background-color: #0E9BB8;\n  color: white;\n\n  &:hover {\n    cursor: pointer;\n  }\n\n  &:active {\n    transform: translate(2px, 2px);\n    outline: none;\n  }\n\n  &:focus {\n    outline: none;\n  }\n  \n  ${props => props.red && css`\n    background-color: #A41A2F;\n  `}\n`\n\nexport default Button;","import styled from 'styled-components';\nimport React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport Button from './Button';\nimport axios from 'axios';\n\nclass SignInForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: undefined,\n      password: undefined,\n      emailErr: undefined,\n      passwordErr: undefined,\n      stylistErr: undefined\n    }\n    this.handleChange = this.handleChange.bind(this);\n    this.submitForm = this.submitForm.bind(this);\n  }\n\n  async submitForm(event) {\n    event.preventDefault();\n\n    try{\n      const res = await axios({\n        url: 'api/v1/login',\n        method: 'post',\n        data: {\n          email: this.state.email,\n          password: this.state.password\n        }\n      });\n  \n      localStorage.setItem('stylistToken', res.data.token);\n      this.props.history.push('/dashboard');\n    } catch(error) {\n      this.setState({\n        emailErr: error.response.data.email,\n        passwordErr: error.response.data.password,\n        stylistErr: error.response.data.stylist\n      })\n    }\n    \n  }\n\n  handleChange(event) {\n    this.setState({\n      [event.target.name]: event.target.value\n    })\n  }\n\n  render() {\n    return (\n      <StyledForm onSubmit={this.submitForm}>\n        <StyledLabel htmlFor=\"email\">Email Address</StyledLabel>\n        <StyledInput type=\"text\" id=\"email\" name=\"email\" onChange={this.handleChange}/>\n        { this.state.emailErr ? <ErrorMessage>{ this.state.emailErr }</ErrorMessage> : null }\n        <StyledLabel htmlFor=\"password\">Password</StyledLabel>\n        <StyledInput type=\"password\" id=\"password\" name=\"password\" onChange={this.handleChange}/>\n        { this.state.passwordErr ? <ErrorMessage>{ this.state.passwordErr }</ErrorMessage> : null }\n        <ButtonDiv>\n          <Button red>Sign Up</Button>\n          <Button type=\"submit\">Sign In</Button>\n        </ButtonDiv>\n        { this.state.stylistErr ? <ErrorMessage>{ this.state.stylistErr }</ErrorMessage> : null }\n        \n      </StyledForm>\n    )\n  }\n}\n\nconst ErrorMessage = styled.p`\n  color: red;\n  margin-top: -10px;\n  font-size: 1.4rem;\n`;\n\nconst StyledForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  background: rgba(216, 216, 216, 0.85);\n  width: 40rem;\n  height: 27rem;\n  box-sizing: border-box;\n  border-radius: 6px;\n  box-shadow: 4px 4px 2px rgba(0,0,0, 0.5);\n\n  & > label {\n    align-self: flex-start;\n    margin-left: 55px;\n  }\n`;\n\nconst StyledInput = styled.input`\n  height: 3rem;\n  width: 30rem;\n  font-size: 1.8rem;\n  font-family: Philosopher;\n  border-radius: 6px;\n  border: 1px solid #979797;\n  margin-bottom: 15px;\n  box-shadow: 2px 2px 2px rgba(0,0,0,0.5);\n  padding: 0 8px;\n`;\n\nconst StyledLabel = styled.label`\n  font-size: 2.2rem;\n  margin-bottom: 3px;\n`;\n\nconst ButtonDiv = styled.div`\n  margin: 20px;\n  & > button {\n    margin: 0 10px;\n  }\n`;\n\nexport default withRouter(SignInForm);","import React, { Component } from 'react';\nimport SignInForm from '../UI/SignInForm';\nimport styled from 'styled-components';\n\nclass SignIn extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    return (\n      <StyledDiv>\n        <StyledH1>Style Book</StyledH1>\n        <SignInForm />\n      </StyledDiv>\n    )\n  }\n}\n\nconst StyledDiv = styled.div`\n  height: 100vh;\n  width: 100vw;\n  background-image: url(https://images.unsplash.com/photo-1521590832167-7bcbfaa6381f?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=3900&q=80);\n  background-size: cover;\n  display: grid;\n  grid-template-columns: repeat(12, 1fr);\n  grid-template-rows: repeat(6, 1fr);\n\n  & > form {\n    grid-column: 5 / span 4;\n    grid-row: 3 /span 2;\n    justify-self: center;\n    align-self: center;\n  }\n\n  & > h1 {\n    grid-column: 5 / span 4;\n    justify-self: center;\n    align-self: center;\n    grid-row: 2 / span 1;\n  }\n\n  @media only screen and (max-height: 380px) {\n    & > h1 {\n      font-size: 4rem;\n      grid-row: 1 / span 1;\n    }\n\n    & > form {\n      grid-row: 2 / span 5;\n    }\n  }\n\n  @media only screen and (max-width: 380px) {\n    & > h1 {\n      font-size: 4rem;\n      grid-column: 4 / span 6;\n    }\n\n    & > form {\n      width: 370px;\n    }\n  }\n`;\n\nconst StyledH1 = styled.h1`\n  font-family: philosopher;\n  font-size: 9rem;\n  text-shadow: 2px 2px 2px rgba(0,0,0,0.5);\n`;\n\n\nexport default SignIn;","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport jwtDecode from 'jwt-decode';\n\nclass AuthenticateUser extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      userId: undefined,\n      userFirstName: undefined,\n      userLastName: undefined\n    }\n  }\n\n  componentDidMount() {\n    const token = localStorage.getItem('stylistToken');\n\n    if(!token) {\n      console.log('no token');\n      this.props.history.push('/login');\n    } else {\n      const decodedToken = jwtDecode(token);\n      console.log(decodedToken);\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        {this.props.children}\n      </div>\n    )\n  }\n}\n\nexport default withRouter(AuthenticateUser);","import React from 'react';\nimport { withRouter } from 'react-router-dom';\n\nclass Dashboard extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {};\n  }\n\n  componentWillMount() {\n    const token = localStorage.getItem('stylistToken');\n\n    if(!token) {\n      this.props.history.push('/login');\n    }\n  }\n\n  render() {\n    return <div>I'm the dashboard!</div>\n  }\n}\n\nexport default withRouter(Dashboard);","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Switch, Redirect } from 'react-router-dom';\nimport Login from './components/SignIn/Login';\nimport AuthenticateUser from './components/Authentication/AuthenticateUser';\nimport Dashboard from './components/Dashboard/Dashboard';\nimport './App.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      token: null\n    }\n  }\n\n  render() {\n    return (\n      <Router className=\"App\">\n        <Switch>\n          <Redirect exact from=\"/\" to=\"/dashboard\" />\n          <Route path=\"/dashboard\" component={Dashboard} />\n          <Route path=\"/login\" component={ Login } />\n          <AuthenticateUser>\n            \n          </AuthenticateUser>\n        </Switch>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}